AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  saga-pattern-example-account-transfer

  Sample SAM Template for saga-pattern-example-account-transfer

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Tracing: Active
  Api:
    TracingEnabled: True

Resources:
  BalanceTransferMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: statemachine/stock_trader.asl.json
      DefinitionSubstitutions:
        BalanceCheckingServiceFunctionArn: !GetAtt BalanceCheckingServiceFunction.Arn
        WithdrawalServiceFunctionArn: !GetAtt WithdrawalServiceFunction.Arn
        DepositServiceFunctionArn: !GetAtt DepositServiceFunction.Arn
        CompensationServiceFunctionArn: !GetAtt CompensationServiceFunction.Arn
        ChaseBankArn: !GetAtt ChaseBank.Arn
        DDBPutItem: !Sub arn:${AWS::Partition}:states:::dynamodb:putItem
        DDBTable: !Ref TransactionTable
      Events:
        HourlyTradingSchedule:
          Type: Schedule # More info about Schedule Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-schedule.html
          Properties:
            Description: Schedule to run the saga pattern example every hour
            Enabled: False # This schedule is disabled by default to avoid incurring charges.
            Schedule: "rate(1 hour)"
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref BalanceCheckingServiceFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref WithdrawalServiceFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref DepositServiceFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CompensationServiceFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ChaseBank
        - DynamoDBWritePolicy:
            TableName: !Ref TransactionTable
        - DynamoDBWritePolicy:
            TableName: !Ref BankOfAmericaTable

  BalanceCheckingServiceFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/balance_checking_service/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64

  WithdrawalServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/withdrawal_service/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64

  DepositServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/deposit_service/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
  ChaseBank:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/chase_bank/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64

  CompensationServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/compensation_service/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64

  TransactionTable:
    Type: AWS::Serverless::SimpleTable # More info about SimpleTable Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-simpletable.html
    Properties:
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  BankOfAmericaTable:
    Type: AWS::Serverless::SimpleTable # More info about SimpleTable Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-simpletable.html
    Properties:
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  # StockTradingStateMachineHourlyTradingSchedule is an implicit Schedule event rule created out of Events key under Serverless::StateMachine
  # Find out more about other implicit resources you can reference within SAM
  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources.html
  BalanceTransferMachineArn:
    Description: "Stock Trading State machine ARN"
    Value: !Ref BalanceTransferMachine
  BalanceTransferMachineRoleArn:
    Description: "IAM Role created for Stock Trading State machine based on the specified SAM Policy Templates"
    Value: !GetAtt BalanceTransferMachineRole.Arn
