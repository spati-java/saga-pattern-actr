{
    "Comment": "A state machine to transfer money between chase bank and bank of america using Saga Pattern and Serverless technologies ",
    "StartAt": "Check balance",
    "States": {
        "Check balance": {
            "Type": "Task",
            "Resource": "${BalanceCheckingServiceFunctionArn}",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.TaskFailed"
                    ],
                    "IntervalSeconds": 15,
                    "MaxAttempts": 5,
                    "BackoffRate": 1.5
                }
            ],
            "Next": "Withdraw Money",
            "Catch": [
                {
                    "ErrorEquals": ["Lambda.ServiceException"],
                    "ResultPath": "$.error",
                    "Next": "Compensation"
                }
            ]
        },
        "Withdraw Money": {
            "Type": "Task",
            "Resource": "${WithdrawalServiceFunctionArn}",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.TaskFailed"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 3,
                    "BackoffRate": 1
                }
            ],
            "Next": "Deposit Money",
            "Catch": [
                {
                    "ErrorEquals": ["Lambda.ServiceException"],
                    "ResultPath": "$.error",
                    "Next": "Compensation"
                }
            ]
        },
        "Deposit Money": {
            "Type": "Task",
            "Resource": "${DepositServiceFunctionArn}",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.TaskFailed"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 3,
                    "BackoffRate": 1
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": ["Lambda.ServiceException"],
                    "ResultPath": "$.error",
                    "Next": "Compensation"
                }
            ],
            "End": true
        },
        "Compensation": {
            "Type": "Task",
            "Resource": "${CompensationServiceFunctionArn}",
            "End": true
        }
    }
}